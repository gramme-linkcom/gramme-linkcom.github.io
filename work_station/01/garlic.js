!function($){"use strict";var Storage=function(options){this.defined='undefined'!==typeof localStorage;var key='garlic:'+document.domain+'>test';try{localStorage.setItem(key,key);localStorage.removeItem(key)}catch(e){this.defined=!1}};Storage.prototype={constructor:Storage,get:function(key,placeholder){var value=localStorage.getItem(key);if(value){try{value=JSON.parse(value)}catch(e){};return value}else if('undefined'!==typeof placeholder){return placeholder}else{return null}},has:function(key){return localStorage.getItem(key)?!0:!1},set:function(key,value,fn){if(''===value||(value instanceof Array&&value.length===0)){this.destroy(key)}else{value=JSON.stringify(value);localStorage.setItem(key,value)};return'function'===typeof fn?fn():!0},destroy:function(key,fn){localStorage.removeItem(key);return'function'===typeof fn?fn():!0},clean:function(fn){for(var i=localStorage.length-1;i>=0;i--){if('undefined'===typeof Array.indexOf&&-1!==localStorage.key(i).indexOf('garlic:')){localStorage.removeItem(localStorage.key(i))}};return'function'===typeof fn?fn():!0},clear:function(fn){localStorage.clear();return'function'===typeof fn?fn():!0}};var Garlic=function(element,storage,options){this.init('garlic',element,storage,options)};Garlic.prototype={constructor:Garlic,init:function(type,element,storage,options){this.type=type;this.$element=$(element);this.options=this.getOptions(options);this.storage=storage;this.path=this.options.getPath(this.$element)||this.getPath();this.parentForm=this.$element.closest('form');this.$element.addClass('garlic-auto-save');this.expiresFlag=!this.options.expires?!1:(this.$element.data('expires')?this.path:this.getPath(this.parentForm))+'_flag';this.$element.on(this.options.events.join('.'+this.type+' '),!1,$.proxy(this.persist,this));if(this.options.destroy){$(this.parentForm).on('submit reset',!1,$.proxy(this.destroy,this))};this.retrieve()},getOptions:function(options){return $.extend({},$.fn[this.type].defaults,options,this.$element.data())},persist:function(){if(this.val===this.getVal()){return};this.val=this.getVal();if(this.options.expires){this.storage.set(this.expiresFlag,(new Date().getTime()+this.options.expires*1000).toString())};var prePersistValue=this.options.prePersist(this.$element,this.val);if(typeof prePersistValue=='string'){this.val=prePersistValue};this.storage.set(this.path,this.val);this.options.onPersist(this.$element,this.val)},getVal:function(){return!this.$element.is('input[type=checkbox]')?this.$element.val():(this.$element.prop('checked')?'checked':'unchecked')},retrieve:function(){if(this.storage.has(this.path)){if(this.options.expires){var date=new Date().getTime();if(this.storage.get(this.expiresFlag)<date.toString()){this.storage.destroy(this.path);return}else{this.$element.attr('expires-in',Math.floor((parseInt(this.storage.get(this.expiresFlag))-date)/1000))}};var currentValue=this.$element.val();var storedValue=this.storage.get(this.path);var storedValue=this.options.preRetrieve(this.$element,currentValue,storedValue);if(typeof storedValue=='boolean'&&storedValue==!1){return};if(this.options.conflictManager.enabled&&this.detectConflict()){return this.conflictManager()};if(this.$element.is('input[type=radio], input[type=checkbox]')){if('checked'===storedValue||this.$element.val()===storedValue){return this.$element.prop('checked',!0)}else if('unchecked'===storedValue){this.$element.prop('checked',!1)};return};this.$element.val(storedValue);this.$element.trigger('input');this.options.onRetrieve(this.$element,storedValue);return}},detectConflict:function(){var self=this;if(this.$element.is('input[type=checkbox], input[type=radio]')){return!1};if(this.$element.val()&&this.storage.get(this.path)!==this.$element.val()){if(this.$element.is('select')){var selectConflictDetected=!1;this.$element.find('option').each(function(){if($(this).index()!==0&&$(this).attr('selected')&&$(this).val()!==self.storage.get(this.path)){selectConflictDetected=!0;return}});return selectConflictDetected};return!0};return!1},conflictManager:function(){if('function'===typeof this.options.conflictManager.onConflictDetected&&!this.options.conflictManager.onConflictDetected(this.$element,this.storage.get(this.path))){return!1};if(this.options.conflictManager.garlicPriority){this.$element.data('swap-data',this.$element.val());this.$element.data('swap-state','garlic');this.$element.val(this.storage.get(this.path))}else{this.$element.data('swap-data',this.storage.get(this.path));this.$element.data('swap-state','default')};this.swapHandler();this.$element.addClass('garlic-conflict-detected');this.$element.closest('input[type=submit]').attr('disabled',!0)},swapHandler:function(){var swapChoiceElem=$(this.options.conflictManager.template);this.$element.after(swapChoiceElem.text(this.options.conflictManager.message));swapChoiceElem.on('click',!1,$.proxy(this.swap,this))},swap:function(){var val=this.$element.data('swap-data');this.$element.data('swap-state','garlic'===this.$element.data('swap-state')?'default':'garlic');this.$element.data('swap-data',this.$element.val());$(this.$element).val(val);this.options.onSwap(this.$element,this.$element.data('swap-data'),val)},destroy:function(){this.storage.destroy(this.path)},remove:function(){this.destroy();if(this.$element.is('input[type=radio], input[type=checkbox]')){$(this.$element).attr('checked',!1);return};this.$element.val('')},getPath:function(elem){if('undefined'===typeof elem){elem=this.$element};if(this.options.getPath(elem)){return this.options.getPath(elem)};if(elem.length!=1){return!1};var path='',fullPath=elem.is('input[type=checkbox]'),node=elem;while(node.length){var realNode=node[0],name=realNode.nodeName;if(!name){break};name=name.toLowerCase();var parent=node.parent(),siblings=parent.children(name);if(!$(realNode).is('form, input, select, textarea')&&!fullPath){node=parent;continue};name+=$(realNode).attr('name')?'.'+$(realNode).attr('name'):'';if(siblings.length>1&&!$(realNode).is('input[type=radio]')){name+=':eq('+siblings.index(realNode)+')'};path=name+(path?'>'+path:'');if('form'==realNode.nodeName.toLowerCase()){break};node=parent};return'garlic:'+document.domain+(this.options.domain?'*':window.location.pathname)+'>'+path},getStorage:function(){return this.storage}};$.fn.garlic=function(option,fn){var options=$.extend(!0,{},$.fn.garlic.defaults,option,this.data()),storage=new Storage(),returnValue=!1;if(!storage.defined){return!1};function bind(self){var $this=$(self),data=$this.data('garlic'),fieldOptions=$.extend({},options,$this.data());if('undefined'!==typeof fieldOptions.storage&&!fieldOptions.storage){return};if('password'===$(self).attr('type')){return};if(!data){$this.data('garlic',(data=new Garlic(self,storage,fieldOptions)))};if('string'===typeof option&&'function'===typeof data[option]){return data[option]()}};this.each(function(){if($(this).is('form')){$(this).find(options.inputs).each(function(){if($(this).is(options.excluded)){return};returnValue=bind($(this))})}else if($(this).is(options.inputs)){if($(this).is(options.excluded)){return};returnValue=bind($(this))}});return'function'===typeof fn?fn():returnValue};$.fn.garlic.Constructor=Garlic;$.fn.garlic.defaults={destroy:!0,inputs:'input, textarea, select',excluded:'input[type="file"], input[type="hidden"], input[type="submit"], input[type="reset"]',events:['DOMAttrModified','textInput','input','change','click','keypress','paste','focus'],domain:!1,expires:!1,conflictManager:{enabled:!1,garlicPriority:!0,template:'<span class="garlic-swap"></span>',message:'This is your saved data. Click here to see default one',onConflictDetected:function($item,storedVal){return!0}},getPath:function($item){},preRetrieve:function($item,currentValue,storedVal){return storedVal},onRetrieve:function($item,storedVal){},prePersist:function($item,storedVal){return!1},onPersist:function($item,storedVal){},onSwap:function($item,prevValue,curValue){}};$(window).on('load',function(){$('[data-persist="garlic"]').each(function(){$(this).garlic()})})}(window.jQuery||window.Zepto)